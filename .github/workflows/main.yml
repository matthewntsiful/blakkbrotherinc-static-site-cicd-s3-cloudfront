
name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - main
    paths:
    - 'index.html'
    - 'style.css'
    - 'assets/**'
    - '.github/workflows/main.yml'
  pull_request:
    branches:
      - main
    paths:
    - 'index.html'
    - 'style.css'
    - 'assets/**'
    - '.github/workflows/main.yml'
  workflow_dispatch:
jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: sonarqube
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync files to S3
        run: |
          aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }} --delete --exclude ".*" --exclude "*.md" --exclude "LICENSE"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

#   notify-success:
#     needs: [sonarqube, deploy]
#     uses: ./.github/workflows/slack.yml
#     with:
#       status: 'success'
#       job_name: 'Deployment'
#     secrets:
#       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#     if: success()

#   notify-failure:
#     needs: [sonarqube, deploy]
#     uses: ./.github/workflows/slack.yml
#     with:
#       status: 'failure'
#       job_name: 'Deployment'
#     secrets:
#       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#     if: failure()

#   notify-cancelled:
#     needs: [sonarqube, deploy]
#     uses: ./.github/workflows/slack.yml
#     with:
#       status: 'cancelled'
#       job_name: 'Deployment'
#     secrets:
#       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#     if: cancelled()
#####